import numpy as np
from pymongo import MongoClient
from sklearn.neural_network import MLPClassifier

X = np.loadtxt("output.csv", delimiter=',')
target_points = np.array([
    [150, 101,0, 2000],
    [200, 101, 1, 2000],
    [100, 101,0, 250],
    [75, 101,0, 250],
    [2, 101,0, 100],
    [10,101, 0, 100],
    [50, 101,0, 100],
    [60, 101,0, 100],
    [0.25, 100,0, 2],
    [ 3,100 ,0, 2]
])
distances_to_targets = np.linalg.norm(X[:, np.newaxis] - target_points, axis=2)
closest_target_indices = np.argmin(distances_to_targets, axis=1)
closest_target_distances = distances_to_targets[np.arange(distances_to_targets.shape[0]), closest_target_indices]
# for i, (index, distance) in enumerate(zip(closest_target_indices, closest_target_distances)):
#     print(f"Data point {i}: Closest plan  = {index+1}, Distance = {distance:.4f}")
    # print(index+1)


# client = MongoClient("mongodb+srv://hishamkaleem27:hishamkaleem28@cluster0.meel8.mongodb.net/") 
# db = client['PhoneData']
# collection = db['Phone']
# par = collection.find({})
# data = list(par)
# print (data)
# np.set_printoptions(suppress=True)
# data_set = np.loadtxt("output.csv", delimiter=',')
# answers = np.loadtxt("recc_plans.csv", delimiter=',')
# answers=answers.reshape(-1)

# mlp = MLPClassifier(hidden_layer_sizes=(5,), max_iter=1000, random_state=1)

# mlp.fit(data_set, answers)
# test_data = np.loadtxt("test.csv",delimiter=',')
# test_data=test_data.reshape(1, -1)
# print(test_data)
# prediction=mlp.predict(test_data)
# print("Prediction:", prediction)



